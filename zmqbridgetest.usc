-- -*- mode: lua; -*-


local function get_root()
 return os.getenv("UBX_ROOT").."/"
end

return bd.system
{
   imports = {
      get_root().."std_types/stdtypes/stdtypes.so",
      get_root().."std_blocks/ptrig/ptrig.so",
      get_root().."std_blocks/lfds_buffers/lfds_cyclic.so",
      get_root().."std_blocks/lfds_buffers/lfds_cyclic_raw.so",
      get_root().."std_blocks/logging/file_logger.so",
      get_root().."std_blocks/hexdump/hexdump.so",
      get_root().."std_blocks/random/random.so",
      "build/zmqrecieverlib.so",
      "build/zmqsenderlib.so",
   },

   blocks = {
      { name="publisher", type="zmq_sender" },
      { name="subscriber", type="zmq_reciever" },
      { name="randomblx", type="random/random" },
      { name="hexdump1", type="hexdump/hexdump" },
      { name="hexdump2", type="hexdump/hexdump" },
      { name="bytestreambuffer",type="lfds_buffers/cyclic_raw" }
   },
   
   connections = {
      { src="randomblx.rnd", tgt="bytestreambuffer" },
      { src="bytestreambuffer", tgt="publisher.zmq_out" },
      { src="randomblx.rnd", tgt="hexdump1" },
    --  { src="randomblx.rnd", tgt="publisher.zmq_out" },
      { src="subscriber.zmq_in", tgt="hexdump2" },
   },
   
   configurations = {
      { name="publisher", config = { connection_spec="tcp://*:11411" } },
      { name="subscriber", config = { connection_spec="tcp://localhost:11411"} },	
      { name="bytestreambuffer", config = { element_num=100 , element_size=100 } },			
   },
   
}
